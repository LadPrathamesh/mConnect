<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="32" passed="28" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-01T15:30:04 IST" name="Default suite" finished-at="2023-09-01T15:53:13 IST" duration-ms="1388533">
    <groups>
    </groups>
    <test started-at="2023-09-01T15:30:04 IST" name="Default test" finished-at="2023-09-01T15:53:13 IST" duration-ms="1388533">
      <class name="testCases.TestCases">
        <test-method is-config="true" signature="start()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:30:05 IST" name="start" finished-at="2023-09-01T15:30:05 IST" duration-ms="89" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:30:05 IST" name="setUp" finished-at="2023-09-01T15:30:10 IST" duration-ms="4996" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:30:10 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:30:52 IST" duration-ms="42134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cs.anand@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:30:52 IST" name="TakeDown" finished-at="2023-09-01T15:30:53 IST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:30:53 IST" name="setUp" finished-at="2023-09-01T15:31:00 IST" duration-ms="7241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:31:00 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:31:42 IST" duration-ms="42289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[diwakar.jha@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:31:42 IST" name="TakeDown" finished-at="2023-09-01T15:31:42 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:31:42 IST" name="setUp" finished-at="2023-09-01T15:31:46 IST" duration-ms="3657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:31:46 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:32:29 IST" duration-ms="42740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[indranil.sengupta@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:32:29 IST" name="TakeDown" finished-at="2023-09-01T15:32:29 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:32:29 IST" name="setUp" finished-at="2023-09-01T15:32:33 IST" duration-ms="3843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:32:33 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:33:15 IST" duration-ms="42455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jay.mehta@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:33:15 IST" name="TakeDown" finished-at="2023-09-01T15:33:16 IST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:33:16 IST" name="setUp" finished-at="2023-09-01T15:33:19 IST" duration-ms="3842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:33:19 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:34:01 IST" duration-ms="41455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[krishan.kalla@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:34:01 IST" name="TakeDown" finished-at="2023-09-01T15:34:01 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:34:01 IST" name="setUp" finished-at="2023-09-01T15:34:05 IST" duration-ms="3581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:34:05 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:34:46 IST" duration-ms="40960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[manjunatha.yv@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:34:46 IST" name="TakeDown" finished-at="2023-09-01T15:34:46 IST" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:34:46 IST" name="setUp" finished-at="2023-09-01T15:34:50 IST" duration-ms="4544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:34:50 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:35:32 IST" duration-ms="41120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mehra.surender@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:35:32 IST" name="TakeDown" finished-at="2023-09-01T15:35:32 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:35:32 IST" name="setUp" finished-at="2023-09-01T15:35:35 IST" duration-ms="3665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:35:35 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:36:17 IST" duration-ms="41866" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nawlesh.kumar@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:36:17 IST" name="TakeDown" finished-at="2023-09-01T15:36:18 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:36:18 IST" name="setUp" finished-at="2023-09-01T15:36:24 IST" duration-ms="6139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:36:24 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:37:06 IST" duration-ms="41978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sanjay.kaul@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:37:06 IST" name="TakeDown" finished-at="2023-09-01T15:37:06 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:37:06 IST" name="setUp" finished-at="2023-09-01T15:37:10 IST" duration-ms="4289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:37:10 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:37:53 IST" duration-ms="42986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[senthilkumar.p@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:37:53 IST" name="TakeDown" finished-at="2023-09-01T15:37:53 IST" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:37:53 IST" name="setUp" finished-at="2023-09-01T15:37:58 IST" duration-ms="4227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:37:58 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:38:40 IST" duration-ms="42271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[shwetank.mishra@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:38:40 IST" name="TakeDown" finished-at="2023-09-01T15:38:40 IST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:38:40 IST" name="setUp" finished-at="2023-09-01T15:38:45 IST" duration-ms="4876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:38:45 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:39:28 IST" duration-ms="43208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aditi.goel@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:39:28 IST" name="TakeDown" finished-at="2023-09-01T15:39:29 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:39:29 IST" name="setUp" finished-at="2023-09-01T15:39:36 IST" duration-ms="7648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:39:36 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:40:20 IST" duration-ms="43489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[avantika.mehta@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:40:20 IST" name="TakeDown" finished-at="2023-09-01T15:40:20 IST" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:40:20 IST" name="setUp" finished-at="2023-09-01T15:40:24 IST" duration-ms="4143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:40:24 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:41:08 IST" duration-ms="43808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gopalakrishnan.vp@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:41:08 IST" name="TakeDown" finished-at="2023-09-01T15:41:08 IST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:41:08 IST" name="setUp" finished-at="2023-09-01T15:41:12 IST" duration-ms="3535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:41:12 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:41:54 IST" duration-ms="42022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mohd.adnan@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:41:54 IST" name="TakeDown" finished-at="2023-09-01T15:41:54 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:41:54 IST" name="setUp" finished-at="2023-09-01T15:41:57 IST" duration-ms="3565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:41:57 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:42:40 IST" duration-ms="42862" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[shubham.yadav@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:42:40 IST" name="TakeDown" finished-at="2023-09-01T15:42:41 IST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:42:41 IST" name="setUp" finished-at="2023-09-01T15:42:45 IST" duration-ms="4684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:42:45 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:43:28 IST" duration-ms="42834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mangala.dubey@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:43:28 IST" name="TakeDown" finished-at="2023-09-01T15:43:28 IST" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:43:28 IST" name="setUp" finished-at="2023-09-01T15:43:33 IST" duration-ms="4393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:43:33 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:44:15 IST" duration-ms="42363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[diksha.na@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:44:15 IST" name="TakeDown" finished-at="2023-09-01T15:44:15 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:44:15 IST" name="setUp" finished-at="2023-09-01T15:44:20 IST" duration-ms="4531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:44:20 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:45:02 IST" duration-ms="42442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[golandaz.khan@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:45:02 IST" name="TakeDown" finished-at="2023-09-01T15:45:02 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:45:02 IST" name="setUp" finished-at="2023-09-01T15:45:06 IST" duration-ms="3510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:45:06 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:45:49 IST" duration-ms="42928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[p.sridhar@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:45:49 IST" name="TakeDown" finished-at="2023-09-01T15:45:49 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:45:49 IST" name="setUp" finished-at="2023-09-01T15:45:59 IST" duration-ms="10186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:45:59 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:46:43 IST" duration-ms="43630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rajkumar.dubey@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:46:43 IST" name="TakeDown" finished-at="2023-09-01T15:46:43 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:46:43 IST" name="setUp" finished-at="2023-09-01T15:46:47 IST" duration-ms="3896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:46:47 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:47:29 IST" duration-ms="42309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[upendra.choudhary@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:47:29 IST" name="TakeDown" finished-at="2023-09-01T15:47:30 IST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:47:30 IST" name="setUp" finished-at="2023-09-01T15:47:33 IST" duration-ms="3358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:47:33 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:48:15 IST" duration-ms="41935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[diksha.na@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:48:15 IST" name="TakeDown" finished-at="2023-09-01T15:48:15 IST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:48:15 IST" name="setUp" finished-at="2023-09-01T15:48:19 IST" duration-ms="3558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:48:19 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:49:01 IST" duration-ms="41998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[govindrakesh.iyer@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:49:01 IST" name="TakeDown" finished-at="2023-09-01T15:49:01 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:49:01 IST" name="setUp" finished-at="2023-09-01T15:49:04 IST" duration-ms="3141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:49:04 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:49:46 IST" duration-ms="42265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[joseph.reddy@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:49:46 IST" name="TakeDown" finished-at="2023-09-01T15:49:47 IST" duration-ms="330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:49:47 IST" name="setUp" finished-at="2023-09-01T15:49:51 IST" duration-ms="3990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:49:51 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:50:34 IST" duration-ms="43132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[namani.kumar@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:50:34 IST" name="TakeDown" finished-at="2023-09-01T15:50:34 IST" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:50:34 IST" name="setUp" finished-at="2023-09-01T15:50:39 IST" duration-ms="5017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:50:39 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:51:24 IST" duration-ms="44783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sanjaya.sahu@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:51:24 IST" name="TakeDown" finished-at="2023-09-01T15:51:24 IST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:51:24 IST" name="setUp" finished-at="2023-09-01T15:51:28 IST" duration-ms="4054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:51:28 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:52:09 IST" duration-ms="40896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tejaskumar.suthar@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:52:09 IST" name="TakeDown" finished-at="2023-09-01T15:52:10 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:52:10 IST" name="setUp" finished-at="2023-09-01T15:52:16 IST" duration-ms="6259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:52:16 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:52:40 IST" duration-ms="24622" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[bibin.krishnan@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=116.0.5845.141)
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-FV0KD14', ip: '192.168.0.113', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3c7298fe6834ab1a27b4edcdafe4b7b7, clickElement {id=91384E2D2893C603CF5EC7A0BA82F645_element_115}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.141, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\nanos\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52533}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52533/devtoo..., se:cdpVersion: 116.0.5845.141, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (3c7298fe6834ab1a27b4edcdafe4b7b7)] -> xpath: (//input[@id='grouped-demo'])[2]]
Session ID: 3c7298fe6834ab1a27b4edcdafe4b7b7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=116.0.5845.141)
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-FV0KD14', ip: '192.168.0.113', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3c7298fe6834ab1a27b4edcdafe4b7b7, clickElement {id=91384E2D2893C603CF5EC7A0BA82F645_element_115}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.141, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\nanos\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52533}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52533/devtoo..., se:cdpVersion: 116.0.5845.141, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (3c7298fe6834ab1a27b4edcdafe4b7b7)] -> xpath: (//input[@id='grouped-demo'])[2]]
Session ID: 3c7298fe6834ab1a27b4edcdafe4b7b7
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at utility.ElementDropdown.select(ElementDropdown.java:16)
at testCases.TestCases.myDairy(TestCases.java:91)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:52:40 IST" name="TakeDown" finished-at="2023-09-01T15:52:41 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:52:41 IST" name="setUp" finished-at="2023-09-01T15:52:47 IST" duration-ms="6712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="myDairy(java.lang.String,java.lang.String)[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:52:47 IST" name="myDairy" data-provider="loginData" finished-at="2023-09-01T15:53:13 IST" duration-ms="25424" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[shalini.ghosh@pidilite.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pidilite@123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=116.0.5845.141)
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-FV0KD14', ip: '192.168.0.113', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a14f51fbafe488241a05bb60dbf9d77f, clickElement {id=147C3C413117A8B25FCC3653F760D201_element_114}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.141, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\nanos\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52590}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52590/devtoo..., se:cdpVersion: 116.0.5845.141, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (a14f51fbafe488241a05bb60dbf9d77f)] -> xpath: (//input[@id='grouped-demo'])[2]]
Session ID: a14f51fbafe488241a05bb60dbf9d77f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=116.0.5845.141)
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-FV0KD14', ip: '192.168.0.113', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a14f51fbafe488241a05bb60dbf9d77f, clickElement {id=147C3C413117A8B25FCC3653F760D201_element_114}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.141, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\nanos\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52590}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52590/devtoo..., se:cdpVersion: 116.0.5845.141, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (a14f51fbafe488241a05bb60dbf9d77f)] -> xpath: (//input[@id='grouped-demo'])[2]]
Session ID: a14f51fbafe488241a05bb60dbf9d77f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at utility.ElementDropdown.select(ElementDropdown.java:16)
at testCases.TestCases.myDairy(TestCases.java:91)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myDairy -->
        <test-method is-config="true" signature="TakeDown()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:53:13 IST" name="TakeDown" finished-at="2023-09-01T15:53:13 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TakeDown -->
        <test-method is-config="true" signature="stop()[pri:0, instance:testCases.TestCases@72d1ad2e]" started-at="2023-09-01T15:53:13 IST" name="stop" finished-at="2023-09-01T15:53:13 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop -->
      </class> <!-- testCases.TestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
